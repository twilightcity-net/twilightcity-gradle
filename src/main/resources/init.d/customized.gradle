println "Using the DreamScale Gradle distro"

allprojects {

    def repositoryReadCredentials = null
    if (hasReadCredentials(project)) {
        repositoryReadCredentials = {
            username repositoryReadUsername
            password repositoryReadPassword
        }
    }

    buildscript {
        ext {
            if (project.hasProperty("repositoryPublicUrl") == false) {
                repositoryPublicUrl = "http://nexus.twilightcity.net:8081/repository/public"
            }
        }

        repositories {
            mavenLocal()
            jcenter()
            maven {
                if (repositoryReadCredentials != null) {
                    credentials repositoryReadCredentials
                }
                url repositoryPublicUrl
            }
        }

        dependencies {
            if (project.name != "gradle-core" && project.name != "gradle-templates") {
                classpath "org.dreamscale:gradle-core:1.+"
                classpath "org.dreamscale:gradle-templates:1.+"
            }
            if (project.hasProperty("springBootVersion")) {
                classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            }
        }
    }

    repositories {
        mavenLocal()
        jcenter()
        maven {
            if (repositoryReadCredentials != null) {
                credentials repositoryReadCredentials
            }
            url repositoryPublicUrl
        }
    }

    ext["dreamscale.printCorePluginVersion"] = ""

    ext["organization.repo.url"] = "https://github.com/twilightcity-net"
    ext["organization.repo.connection"] = "scm:git:git@github.com:twilightcity-net"

    ext["bintray.repo"] = "maven-public"
    ext["bintray.userOrg"] = "twilightcity-net"

    ext["maven.pom.packaging"] = "jar"
    ext["maven.pom.developer.id"] = "twilightcity"
    ext["maven.pom.developer.name"] = "TwilightCity Open Source Development"
    ext["maven.pom.developer.email"] = "opensource@twilightcity.net"
}

def hasReadCredentials(project) {
    return project.hasProperty("repositoryReadUsername") && project.hasProperty("repositoryReadPassword")
}
